# -*- coding: utf-8 -*-

import os
import io
import asyncio
from datetime import datetime
import google.generativeai as genai
from google.api_core import exceptions as google_exceptions
from PIL import Image
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# --- –ù–ê–°–¢–†–û–ô–ö–ê ---
TELEGRAM_TOKEN = os.environ.get("TELEGRAM_TOKEN")
GEMINI_API_KEY = os.environ.get("GEMINI_API_KEY")
OWNER_ID = os.environ.get("OWNER_ID")

# --- –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø GEMINI ---
try:
    genai.configure(api_key=GEMINI_API_KEY)
    # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –º–æ–¥–µ–ª—å. –î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω—É–∂–Ω–∞ –¥—Ä—É–≥–∞—è.
    # –ù–∞ —Å–µ–Ω—Ç—è–±—Ä—å 2025 –≥–æ–¥–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑ —Ç–µ–∫—Å—Ç–∞ –∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è 'gemini-1.5-flash' –∏–ª–∏ 'gemini-1.5-pro'
    model = genai.GenerativeModel('gemini-1.5-flash') 
    print("–ú–æ–¥–µ–ª—å Gemini —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞.")
except Exception as e:
    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Gemini: {e}")
    model = None

# --- –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –û–ë–†–ê–ë–û–¢–ö–ò –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô ---

async def process_image_with_prompt(update: Update, context: ContextTypes.DEFAULT_TYPE, photo_file_id: str, user_prompt: str):
    """
    –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ Gemini, –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –ª–æ–≥–æ–≤ –≤–ª–∞–¥–µ–ª—å—Ü—É.
    """
    status_message = await update.message.reply_text("‚úÖ –ü–æ–ª—É—á–∏–ª –∑–∞–¥–∞—á—É. –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É...")
    await context.bot.send_chat_action(chat_id=update.effective_chat.id, action='upload_photo')
    
    try:
        print(f"–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ. –ü—Ä–æ–º–ø—Ç: '{user_prompt}'")
        photo_file = await context.bot.get_file(photo_file_id)
        file_bytes = await photo_file.download_as_bytearray()
        
        # --- –ù–û–í–ò–ù–ö–ê: –û—Ç–ø—Ä–∞–≤–∫–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–ª–∞–¥–µ–ª—å—Ü—É ---
        try:
            user = update.effective_user
            caption = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.first_name} (@{user.username}, ID: {user.id}) –ø—Ä–∏—Å–ª–∞–ª —Ñ–æ—Ç–æ —Å –∑–∞–ø—Ä–æ—Å–æ–º:\n\n'{user_prompt}'"
            await context.bot.send_photo(chat_id=OWNER_ID, photo=bytes(file_bytes), caption=caption)
            print(f"–ò—Å—Ö–æ–¥–Ω–æ–µ —Ñ–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤–ª–∞–¥–µ–ª—å—Ü—É (ID: {OWNER_ID})")
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏—Å—Ö–æ–¥–Ω–æ–µ —Ñ–æ—Ç–æ –≤–ª–∞–¥–µ–ª—å—Ü—É: {e}")
        # --- –ö–û–ù–ï–¶ –ù–û–í–û–í–í–ï–î–ï–ù–ò–Ø ---

        img = Image.open(io.BytesIO(file_bytes))

        await status_message.edit_text("‚è≥ –û—Ç–ø—Ä–∞–≤–ª—è—é –¥–∞–Ω–Ω—ã–µ –≤ –Ω–µ–π—Ä–æ—Å–µ—Ç—å Gemini... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ –º–∏–Ω—É—Ç—ã.")
        
        # –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –î–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è/—Å–æ–∑–¥–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø—Ä–æ–º–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª–µ–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º.
        # –ù–∞–ø—Ä–∏–º–µ—Ä: "—Å–¥–µ–ª–∞–π —Ñ–æ–Ω —Å–∏–Ω–∏–º", "–¥–æ–±–∞–≤—å –Ω–∞ —Ñ–æ—Ç–æ –∫–æ—Ç–∞ –≤ –æ—á–∫–∞—Ö"
        full_prompt = [user_prompt, img]
        
        response = await asyncio.to_thread(model.generate_content, full_prompt)

        await status_message.edit_text("üé® –ù–µ–π—Ä–æ—Å–µ—Ç—å –∑–∞–∫–æ–Ω—á–∏–ª–∞ —Ä–∞–±–æ—Ç—É. –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –æ—Ç–≤–µ—Ç...")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å—Ç—å –ª–∏ –≤ –æ—Ç–≤–µ—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        if response.parts and response.parts[0].inline_data:
            image_part = response.parts[0]
            
            await status_message.edit_text("‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ! –ì–æ—Ç–æ–≤–ª—é –µ–≥–æ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ...")
            generated_image_data = image_part.inline_data.data
            
            # --- –ù–û–í–ò–ù–ö–ê: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–ª–∞–¥–µ–ª—å—Ü—É ---
            try:
                await context.bot.send_photo(chat_id=OWNER_ID, photo=generated_image_data, caption="‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
                print(f"–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ñ–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤–ª–∞–¥–µ–ª—å—Ü—É (ID: {OWNER_ID})")
            except Exception as e:
                print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ñ–æ—Ç–æ –≤–ª–∞–¥–µ–ª—å—Ü—É: {e}")
            # --- –ö–û–ù–ï–¶ –ù–û–í–û–í–í–ï–î–ï–ù–ò–Ø ---
            
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await update.message.reply_photo(photo=generated_image_data, caption=f"–ì–æ—Ç–æ–≤–æ! ‚ú®\n–í–∞—à –∑–∞–ø—Ä–æ—Å: '{user_prompt}'")
            await status_message.delete()
            print("–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.")
        else:
            text_explanation = response.text if hasattr(response, 'text') and response.text else "–ú–æ–¥–µ–ª—å –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª–∞ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è."
            print(f"–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –±—ã–ª–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ. –û—Ç–≤–µ—Ç –æ—Ç API: '{text_explanation}'")
            error_text = (f"üò• –ú–æ–¥–µ–ª—å –Ω–µ —Å–º–æ–≥–ª–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.\n\n"
                          f"**–û—Ç–≤–µ—Ç –æ—Ç –Ω–µ–π—Ä–æ—Å–µ—Ç–∏:**\n_{text_explanation}_\n\n"
                          "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å, —Å–¥–µ–ª–∞–≤ –µ–≥–æ –ø—Ä–æ—â–µ.")
            await status_message.edit_text(error_text, parse_mode='Markdown')

    except google_exceptions.BadRequest as e:
        print(f"–û—à–∏–±–∫–∞ BadRequest –æ—Ç Google API: {e}")
        error_text = ("üò• **–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ (400 Bad Request).**\n\n"
                      "–ß–∞—â–µ –≤—Å–µ–≥–æ —ç—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ **–≤–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è** –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è API.\n\n"
                      "‚û°Ô∏è **–†–µ—à–µ–Ω–∏–µ:** –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å VPN-—Å–µ—Ä–≤–∏—Å —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ —Å–µ—Ä–≤–µ—Ä—É –≤ –°–®–ê –∏–ª–∏ –¥—Ä—É–≥–æ–π –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ–π —Å—Ç—Ä–∞–Ω–µ.")
        await status_message.edit_text(error_text, parse_mode='Markdown')
        
    except Exception as e:
        print(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
        error_text = ("üò• –û–π, –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. \n\n"
                      "–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n"
                      "- –ó–∞–ø—Ä–æ—Å –Ω–∞—Ä—É—à–∞–µ—Ç –ø–æ–ª–∏—Ç–∏–∫—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.\n"
                      "- –ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ –º–æ–¥–µ–ª–∏.\n\n"
                      "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–µ —Ñ–æ—Ç–æ.")
        await status_message.edit_text(error_text)

# --- –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–û–ú–ê–ù–î –ò –°–û–û–ë–©–ï–ù–ò–ô (–æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ---

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user = update.effective_user
    welcome_message = (
        f"üëã –ü—Ä–∏–≤–µ—Ç, {user.first_name}!\n\n"
        "–Ø —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –Ω–∞ –±–∞–∑–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ Gemini –æ—Ç Google. "
        "–Ø —É–º–µ—é –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∏ **—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏**.\n\n"
        "‚û°Ô∏è **–î–ª—è —Ç–µ–∫—Å—Ç–∞:** –ü—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å.\n"
        "üñºÔ∏è **–î–ª—è —Ñ–æ—Ç–æ:** –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∞ —è —Å–ø—Ä–æ—à—É, —á—Ç–æ —Å –Ω–∏–º —Å–¥–µ–ª–∞—Ç—å."
    )
    await update.message.reply_html(welcome_message)

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    help_text = (
        "ü§ñ **–ö–∞–∫ –º–Ω–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:**\n\n"
        "1.  **–û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã:**\n"
        "    –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å —Ç–µ–∫—Å—Ç–æ–º.\n\n"
        "2.  **–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ç–æ:**\n"
        "    - **–°–ø–æ—Å–æ–± 1:** –û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é, —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å.\n"
        "    - **–°–ø–æ—Å–æ–± 2:** –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ. –Ø –µ–≥–æ –ø–æ–ª—É—á—É –∏ –ø–æ–ø—Ä–æ—à—É —Ç–µ–±—è –Ω–∞–ø–∏—Å–∞—Ç—å, —á—Ç–æ —Å –Ω–∏–º —Å–¥–µ–ª–∞—Ç—å, –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏."
    )
    await update.message.reply_html(help_text)

async def handle_text_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    if 'pending_photo_id' in context.user_data:
        photo_id = context.user_data.pop('pending_photo_id')
        user_prompt = update.message.text
        await process_image_with_prompt(update, context, photo_id, user_prompt)
        return

    if not model:
        await update.message.reply_text("–ò–∑–≤–∏–Ω–∏—Ç–µ, –º–æ–¥–µ–ª—å Gemini –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞.")
        return

    user_text = update.message.text
    await context.bot.send_chat_action(chat_id=update.effective_chat.id, action='typing')

    try:
        print(f"–ü–æ–ª—É—á–µ–Ω —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å: {user_text}")
        response = await asyncio.to_thread(model.generate_content, user_text)
        await update.message.reply_text(response.text)
        print("–¢–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç –æ—Ç Gemini —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–µ–∫—Å—Ç–∞: {e}")
        await update.message.reply_text("üò• –û–π, –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∞—à —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

async def handle_image_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    if not model:
        await update.message.reply_text("–ò–∑–≤–∏–Ω–∏—Ç–µ, –º–æ–¥–µ–ª—å Gemini –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞.")
        return
        
    user_prompt = update.message.caption
    photo_file = update.message.photo[-1]

    if user_prompt:
        await process_image_with_prompt(update, context, photo_file.file_id, user_prompt)
    else:
        context.user_data['pending_photo_id'] = photo_file.file_id
        
        if len(update.message.photo) > 1:
            await update.message.reply_text("–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–æ—Ç–æ. –Ø –±—É–¥—É —Ä–∞–±–æ—Ç–∞—Ç—å —Å –ø–æ—Å–ª–µ–¥–Ω–∏–º.\n\n–¢–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏, —á—Ç–æ —Å –Ω–∏–º –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å.", quote=True)
        else:
            await update.message.reply_text("–û—Ç–ª–∏—á–Ω–æ–µ —Ñ–æ—Ç–æ! –¢–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏, —á—Ç–æ —Å –Ω–∏–º –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å.", quote=True)

def main() -> None:
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞."""
    print("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    
    # --- –£–î–ê–õ–ï–ù–û: –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–æ–∫ –±–æ–ª—å—à–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è ---
    # if not os.path.exists('user_images'):
    #     os.makedirs('user_images')
    # if not os.path.exists('generated_images'):
    #     os.makedirs('generated_images')

    if TELEGRAM_TOKEN == "–í–ê–®_–¢–ï–õ–ï–ì–†–ê–ú_–¢–û–ö–ï–ù_–°–Æ–î–ê" or GEMINI_API_KEY == "–í–ê–®_GEMINI_API_–ö–õ–Æ–ß_–°–Æ–î–ê" or OWNER_ID == 123456789:
        print("\n!!! –í–ù–ò–ú–ê–ù–ò–ï !!!\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à–∏ TELEGRAM_TOKEN, GEMINI_API_KEY –∏ OWNER_ID –≤ –∫–æ–¥–µ —Ñ–∞–π–ª–∞.")
        return

    application = Application.builder().token(TELEGRAM_TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text_message))
    application.add_handler(MessageHandler(filters.PHOTO, handle_image_message))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ. –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.")
    application.run_polling()

if __name__ == "__main__":
    main()